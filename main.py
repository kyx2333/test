from math import *


if __name__ == "__main__":
    print("\033[33m")

    
    print('[1]o  [2]@  [3]自定义')
    styleinput = input('坐标点样式：')
    
    style = 'o' if styleinput=='1' else '@' if styleinput=='2' else '+'

    if styleinput =='3':
        style = input('自定义坐标点样式：')
    
    if style == '+':
        print('\033[36m默认为+\033[0m')

    while 1:
        while 1:
            func = input('函数：f(x) = ')
            if func == '':
                func = 'None'
                print('\033[36m默认为空函数\033[0m')
            try:
                f = eval('lambda x:'+func)
                break
            except:
                print('\033[31m语法错误！请重新输入函数！\033[0m','\a')
        while 1:
            correct = input('放缩度：')
            if correct == '':
                correct = '1'
                print('\033[36m默认为1\033[0m')
                break
            try:
                useless = log(float(correct));
                break
            except:
                print('\033[31m语法错误！请重新输入放缩度！\033[0m','\a')
        while 1:
            limit1 = input('界限1：')
            if limit1 == '':
                limit1 = '-30'
                print('\033[36m默认为-30\033[0m')
                break
            try:
                useless1 = float(limit1)
                break
            except:
                print('\033[31m语法错误！请重新输入界限1！\033[0m','\a')
        while 1:
            limit2 = input('界限2：')
            if limit2 == '':
                limit2 = '30'
                print('\033[36m默认为30\033[0m')
                break
            try:
                useless2 = float(limit2)
                break
            except:
                print('\033[31m语法错误！请重新输入界限2！\033[0m','\a')

        correct = eval(correct)
        limit1 = eval(limit1)
        limit2 = eval(limit2)

        if limit1 > limit2:
            limit1,limit2 = limit2, limit1
        
        a,b = int(limit1*correct),int(limit2*correct + 1)
        print('')


        ################################################## 初始化坐标 ##################################################
        line30= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line29= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line28= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line27= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line26= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line25= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line24= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line23= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line22= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line21= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line20= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line19= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line18= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line17= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line16= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line15= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line14= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line13= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line12= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line11= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line10= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line9 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line8 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line7 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line6 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line5 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line4 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line3 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line2 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line1 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        line0 = ['\033[31m─\033[0m']*30+['\033[31m┼\033[0m']+['\033[31m─\033[0m']*30
        fine1 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine2 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine3 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine4 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine5 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine6 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine7 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine8 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine9 = [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine10= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine11= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine12= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine13= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine14= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine15= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine16= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine17= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine18= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine19= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine20= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine21= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine22= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine23= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine24= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine25= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine26= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine27= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine28= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine29= [' ']*30+['\033[31m│\033[0m']+[' ']*30
        fine30= [' ']*30+['\033[31m│\033[0m']+[' ']*30



        ################################################## 初始化索引 ##################################################
        listData = [
        fine30,fine29,fine28,fine27,fine26,fine25,fine24,fine23,fine22,fine21,
        fine20,fine19,fine18,fine17,fine16,fine15,fine14,fine13,fine12,fine11,
        fine10,fine9,fine8,fine7,fine6,fine5,fine4,fine3,fine2,fine1,
        line0,
        line1,line2,line3,line4,line5,line6,line7,line8,line9,line10,
        line11,line12,line13,line14,line15,line16,line17,line18,line19,line20,
        line21,line22,line23,line24,line25,line26,line27,line28,line29,line30]


        ################################################### 计算坐标 ###################################################
        correctlist = [];errorlist = []
        for i in range(a,b):
            if 0 <= i+30 <= 60:
                try:
                    result = round(f(i/correct)*correct)
                    if 0 <= result+30 <= 60:
                        listData[result+30][i+30] = '\033[32m'+style+'\033[0m'
                        correctlist.append(f(i/correct))
                except:errorlist.append(str(i/correct))



        ################################################## 打印坐标图 ##################################################
        print('\033[34m=================================================================================================================================\033[0m')
        print('   [函数散点图:\033[36m f(x) = %s\033[0m (\033[36m%.1f<x<%.1f\033[0m)]   图像范围：\033[36m%.1f≤横坐标≤%.1f\033[0m   放缩度：\033[36m%.1f\033[0m   计算精度：\033[36m%.1f\033[0m'
        %(func,limit1,limit2,-30/correct,30/correct,correct,1/correct))
        print(' ==\033[32m┍───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┑\033[0m')
        print(' 30\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line30))) #30
        print(' 29\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line29))) #29
        print(' 28\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line28))) #28
        print(' 27\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line27))) #27
        print(' 26\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line26))) #26
        print(' 25\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line25))) #25
        print(' 24\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line24))) #24
        print(' 23\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line23))) #23
        print(' 22\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line22))) #22
        print(' 21\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line21))) #21
        print(' 20\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line20))) #20
        print(' 19\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line19))) #19
        print(' 18\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line18))) #18
        print(' 17\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line17))) #17
        print(' 16\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line16))) #16
        print(' 15\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line15))) #15
        print(' 14\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line14))) #14
        print(' 13\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line13))) #13
        print(' 12\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line12))) #12
        print(' 11\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line11))) #11
        print(' 10\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line10))) #10
        print('  9\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line9))) #9
        print('  8\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line8))) #8
        print('  7\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line7))) #7
        print('  6\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line6))) #6
        print('  5\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line5))) #5
        print('  4\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line4))) #4
        print('  3\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line3))) #3
        print('  2\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line2))) #2
        print('  1\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(line1))) #1
        print('  \033[31m0\033[0m\033[32m│\033[0m %s \033[32m│\033[0m'%('\033[31m─  \033[0m'.join(line0))) #0
        print(' -1\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine1))) #1-
        print(' -2\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine2))) #2-
        print(' -3\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine3))) #3-
        print(' -4\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine4))) #4-
        print(' -5\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine5))) #5-
        print(' -6\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine6))) #6-
        print(' -7\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine7))) #7-
        print(' -8\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine8))) #8-
        print(' -9\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine9))) #9-
        print('-10\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine10))) #10-
        print('-11\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine11))) #11-
        print('-12\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine12))) #12-
        print('-13\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine13))) #13-
        print('-14\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine14))) #14-
        print('-15\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine15))) #15-
        print('-16\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine16))) #16-
        print('-17\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine17))) #17-
        print('-18\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine18))) #18-
        print('-19\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine19))) #19-
        print('-20\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine20))) #20-
        print('-21\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine21))) #21-
        print('-22\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine22))) #22-
        print('-23\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine23))) #23-
        print('-24\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine24))) #24-
        print('-25\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine25))) #25-
        print('-26\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine26))) #26-
        print('-27\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine27))) #27-
        print('-28\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine28))) #28-
        print('-29\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine29))) #29-
        print('-30\033[32m│\033[0m %s \033[32m│\033[0m'%(' '.join(fine30))) #30-    
        print(' ==\033[32m┕───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────┙\033[0m')
        print('\033[33m纵坐标\033[0m                                                           \033[31m0\033[0m                                                 \033[33m实际坐标\033[0m[\033[32m%.1f\033[0m]'%(30/correct))
        print('\033[34m=================================================================================================================================\033[0m')


            ################################################### 数据分析 ###################################################
        judgelist = [];judge = 1;out = '';n = 1;judgestyle = '\033[32m'+style+'\033[0m'
        if errorlist == []:
            errorlist.append('None') 
        if correctlist == []:
            correctlist.append('0')
            out = '\033[31m函数存在错误！请检查！\033[0m'+'\a'
            parity = 'None';n = 0;errorlist = ['All']
        if n == 1:
            for k1 in range(61):
                if judge == 0:break
                for k2 in range(61):
                    if k1 != 30:
                        if listData[k1][k2]==judgestyle and (listData[60-k1][60-k2]!=judgestyle and listData[k1][60-k2]!=judgestyle):judgelist.append('0');judge = 0;break
                        elif listData[k1][k2]==judgestyle and listData[60-k1][60-k2]==judgestyle:judgelist.append('1')
                        elif listData[k1][k2]==judgestyle and listData[k1][60-k2]==judgestyle:judgelist.append('2')
                    else:
                        if listData[30][k2]!=listData[30][60-k2]:judgelist.append('0');judge = 0;break
            if '0' in judgelist:
                parity = '非奇非偶函数'
            elif judgelist == []:
                parity = '既是奇函数也是偶函数'
            elif '2' not in judgelist:
                parity = '奇函数'
            elif '1' not in judgelist:
                parity = '偶函数'
            else :
                parity = '非奇非偶函数'
        print('[\033[36m图像数据分析\033[0m]   %s'%out)
        print('最大值：\033[32m%s\033[0m'%(max(correctlist)))
        print('最小值：\033[32m%s\033[0m'%(min(correctlist)))
        print('奇偶性：\033[32m%s\033[0m'%parity)
        print('以下位置无定义：\033[32mx=%s\033[0m'%(' x='.join(errorlist)))



        ################################################### 循环运行 ###################################################
        print('');end = input('按任意键继续...')